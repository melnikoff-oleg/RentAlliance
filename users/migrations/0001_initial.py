# Generated by Django 3.0.4 on 2020-04-20 20:14

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('author', models.CharField(max_length=50)),
                ('content', models.TextField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Questionnaire',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_pk', models.IntegerField()),
                ('landlord_pk', models.IntegerField()),
                ('placementValue', models.IntegerField()),
                ('contractConditionsValue', models.IntegerField()),
                ('futureParthershipValue', models.IntegerField()),
                ('qualityValue', models.IntegerField()),
                ('politenessValue', models.IntegerField()),
                ('currentSituationValue', models.IntegerField()),
                ('communicationValue', models.IntegerField()),
                ('recommendationValue', models.IntegerField()),
                ('expectationsValue', models.IntegerField()),
                ('safetyValue', models.IntegerField()),
                ('review', models.TextField(default=None, max_length=5000)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('name', models.CharField(max_length=30)),
                ('is_renter', models.BooleanField(default=True)),
                ('is_landlord', models.BooleanField(default=False)),
                ('is_moderator', models.BooleanField(default=False)),
                ('is_first', models.BooleanField(default=True)),
                ('clients', models.ManyToManyField(related_name='_customuser_clients_+', to=settings.AUTH_USER_MODEL)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('questionnaires', models.ManyToManyField(to='users.Questionnaire')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Chat3',
            fields=[
                ('name', models.TextField(max_length=100)),
                ('landlord', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('messages', models.ManyToManyField(blank=True, default=None, to='users.Message')),
                ('users', models.ManyToManyField(related_name='chat_users', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
